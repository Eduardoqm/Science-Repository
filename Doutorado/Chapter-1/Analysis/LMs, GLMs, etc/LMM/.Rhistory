ggtitle("NDVI")+
xlab("Ano")+ylab("")+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab("Ano")+ylab("")+
theme_bw()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab("Ano")+ylab("")+
theme_dark()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab("Ano")+ylab("")+
theme_classic()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab("Ano")+ylab("")+
theme_538()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab("Ano")+ylab("")+
theme_blank()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab("Ano")+ylab("")+
theme_ggeffects()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab("Ano")+ylab("")+
theme_light()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab("")+ylab("")+
theme_light()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab(NULL)+ylab(NULL)+
theme_light()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab(NULL)+ylab(NULL)+
theme_linedraw()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab(NULL)+ylab(NULL)+
theme_minimal()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab(NULL)+ylab(NULL)+
theme_replace()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab(NULL)+ylab(NULL)+
theme_set()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab(NULL)+ylab(NULL)+
theme_sjplot()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab(NULL)+ylab(NULL)+
theme_sjplot2()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab(NULL)+ylab(NULL)+
theme_test()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab(NULL)+ylab(NULL)+
theme_update()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab(NULL)+ylab(NULL)+
theme_void()+
scale_color_manual(values = c("blue", "orange", "red"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))+
ggtitle("NDVI")+
xlab(NULL)+ylab(NULL)+
scale_color_manual(values = c("blue", "orange", "red"))
??ggarrange
a = plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))
b = plot(ggpredict(mod_msi6, terms = c("year", "treat", "dist2")))
c = plot(ggpredict(mod_ndii6, terms = c("year", "treat", "dist2")))
d = plot(ggpredict(mod_nbr26, terms = c("year", "treat", "dist2")))
e = plot(ggpredict(mod_rendvi6, terms = c("year", "treat", "dist2")))
f = plot(ggpredict(mod_psri6, terms = c("year", "treat", "dist2")))
ggarrange(a, b, c, d, e, f,
common.legend = TRUE,
legend="bottom",
ncol = 1, nrow = 6)
#All Results ======================================================
library(ggpubr)
ggarrange(a, b, c, d, e, f,
common.legend = TRUE,
legend="bottom",
ncol = 1, nrow = 6)
lm_plot = function(w,z){
w+ggtitle(z)+
xlab(NULL)+ylab(NULL)+
scale_color_manual(values = c("blue", "orange", "red"))
}
a = lm_plot(a)
a = lm_plot(a, "NDVI")
a
a = lm_plot(a, z = "NDVI")
a
lm_plot = function(w,title){
w+ggtitle(title)+
xlab(NULL)+ylab(NULL)+
scale_color_manual(values = c("blue", "orange", "red"))
}
a = lm_plot(a, z = "NDVI")
a = lm_plot(a, title = "NDVI")
a
a = lm_plot(a, title = "NDVI")
a = lm_plot(a, title = "NDVI")
b = lm_plot(b, title = "MSI")
c = lm_plot(c, title = "NDII")
d = lm_plot(d, title = "NBR2")
e = lm_plot(e, title = "RENDVI")
f = lm_plot(f, title = "PSRI")
ggarrange(a, b, c, d, e, f,
common.legend = TRUE,
legend="rigth",
ncol = 1, nrow = 6)
ggarrange(a, b, c, d, e, f,
common.legend = TRUE,
legend="right",
ncol = 1, nrow = 6)
ggarrange(a, b, c, d, e, f,
common.legend = TRUE,
legend="right",
ncol = 2, nrow = 3)
lm_plot = function(w,title){
w+ggtitle(title)+
geom_smooth(method = "lm", size = 1.5)
xlab(NULL)+ylab(NULL)+
scale_color_manual(values = c("blue", "orange", "red"))
}
a = lm_plot(a, title = "NDVI")
?ggpredict
ggarrange(a, b, c, d, e, f,
common.legend = TRUE,
legend="right",
ncol = 2, nrow = 3)
#Linear Mixed Models from Models Test
#Eduardo Q Marques 14-09-2021
library(tidyverse)
library(reshape2)
library(ggeffects)
library(sjPlot)
library(lattice)
library(lme4)
dir_input <- "C:/Users/Eduardo Q Marques/Documents/Research/Doutorado/Banco de Dados Tanguro/Dados para analise cap1"
list.files(path = dir_input)
rs <- read_csv(file.path(dir_input, "Hyperion_indexs_all_xy-B.csv"))
rs$treat <- ifelse(rs$treat == "control","aControl", as.character(rs$treat))
rs$treat <- ifelse(rs$treat == "b3yr", "B3yr", as.character(rs$treat))
rs$treat <- ifelse(rs$treat == "b1yr", "B1yr", as.character(rs$treat))
#Calculate Distance of Edge ======================================
summary(rs$y)
min(rs$y) #-13.08359 = 1000 meters
max(rs$y) #-13.07419 = 0 meters
diffy = min(rs$y) - max(rs$y)
rs$dist = ((max(rs$y) - rs$y)/diffy)*1000
rs$dist = abs(rs$dist)
rs$dist2 = c("a")
rs$dist2[rs$dist <= 250] = c("Borda")
rs$dist2[rs$dist > 250] = c("Interior")
#Normalize Index values ==========================================
rs_norm <- rs %>%
group_by(index) %>%
mutate(value_norm = scale(value)) %>%
ungroup()
#NDVI ============================================================
mod_NDVI <- lmer(value_norm ~ treat*dist + (1|year), data = subset(rs_norm, index == "ndvi"))
summary(mod_NDVI)
mod_NDVI2 <- lmer(value_norm ~ treat*dist + (dist|year), data = subset(rs_norm, index == "ndvi"))
summary(mod_NDVI2)
mod_NDVI3 <- lmer(value_norm ~ treat+dist + (dist|year), data = subset(rs_norm, index == "ndvi"))
summary(mod_NDVI3)
mod_NDVI4 <- lmer(value_norm ~ treat*year + (year|dist), data = subset(rs_norm, index == "ndvi"))
summary(mod_NDVI4)
mod_NDVI5 <- lmer(value_norm ~ treat*dist*year + (dist|year), data = subset(rs_norm, index == "ndvi"))
summary(mod_NDVI5)
mod_NDVI6 <- lmer(value_norm ~ treat*dist2*year + (dist2|year), data = subset(rs_norm, index == "ndvi"))
summary(mod_NDVI6)
#Find the best model ===============================================
anova(mod_NDVI, mod_NDVI2, mod_NDVI3, mod_NDVI4, mod_NDVI5, mod_NDVI6)
#Find the best model ===============================================
anova(mod_NDVI, mod_NDVI2, mod_NDVI3, mod_NDVI4, mod_NDVI5, mod_NDVI6)
#Plot results
plot(ggpredict(mod_psri6, terms = c("dist2", "treat")))
plot(ggpredict(mod_psri6, terms = c("year", "treat")))
plot(ggpredict(mod_psri6, terms = c("dist2", "treat", "year")))
plot(ggpredict(mod_psri6, terms = c("year", "treat", "dist2")))
#All Results ======================================================
library(ggpubr)
a = plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))
b = plot(ggpredict(mod_msi6, terms = c("year", "treat", "dist2")))
c = plot(ggpredict(mod_ndii6, terms = c("year", "treat", "dist2")))
d = plot(ggpredict(mod_nbr26, terms = c("year", "treat", "dist2")))
e = plot(ggpredict(mod_rendvi6, terms = c("year", "treat", "dist2")))
f = plot(ggpredict(mod_psri6, terms = c("year", "treat", "dist2")))
lm_plot = function(w,title){
w+ggtitle(title)+
xlab(NULL)+ylab(NULL)+
scale_color_manual(values = c("blue", "orange", "red"))
}
a = lm_plot(a, title = "NDVI")
b = lm_plot(b, title = "MSI")
c = lm_plot(c, title = "NDII")
d = lm_plot(d, title = "NBR2")
e = lm_plot(e, title = "RENDVI")
f = lm_plot(f, title = "PSRI")
ggarrange(a, b, c, d, e, f,
common.legend = TRUE,
legend="right",
ncol = 2, nrow = 3)
library(tidyverse)
library(reshape2)
library(ggeffects)
library(sjPlot)
library(lattice)
library(lme4)
dir_input <- "C:/Users/Eduardo Q Marques/Documents/Research/Doutorado/Banco de Dados Tanguro/Dados para analise cap1"
list.files(path = dir_input)
rs <- read_csv(file.path(dir_input, "Landsat_indexs_all_xy.csv"))
rs$treat <- ifelse(rs$treat == "control","aControl", as.character(rs$treat))
rs$treat <- ifelse(rs$treat == "b3yr", "B3yr", as.character(rs$treat))
rs$treat <- ifelse(rs$treat == "b1yr", "B1yr", as.character(rs$treat))
#Modify Data =====================================================
df$year = substr(df$year, 1,4)
df$year = as.numeric(df$year)
#Modify Data =====================================================
rs$year = substr(rs$year, 1,4)
rs$year = as.numeric(rs$year)
rs$index = as.character(rs$index)
rs$treat = as.character(rs$treat)
rs = rs %>% #Resume repeat years with mean
group_by(x, y, index, year, treat) %>%
summarise(value = mean(value))
#Calculate Distance of Edge ======================================
summary(rs$y)
min(rs$y) #-13.08359 = 1000 meters
max(rs$y) #-13.07419 = 0 meters
#Calculate Distance of Edge ======================================
evi = rs %>% filter(index == "evi")
view(rs)
#Calculate Distance of Edge ======================================
evi = rs %>% filter(index == "evi2")
ggplot(evi, aes(x=EVI, y=y, col=Parcela))+
geom_point(aes(shape=cond), alpha = 0.35, size = 3)+
scale_color_manual(values = c("orange","red","blue"))
ggplot(evi, aes(x=value, y=y, col=treat))+
geom_point(alpha = 0.35, size = 3)+
scale_color_manual(values = c("orange","red","blue"))
ggplot(evi, aes(x=value, y=y, col=treat))+
geom_point(alpha = 0.2, size = 3)+
scale_color_manual(values = c("blue","orange","red"))
summary(rs$y)
min(rs$y) #-13.08343 = 1000 meters
max(rs$y) #-13.07422 = 0 meters
diffy = min(rs$y) - max(rs$y)
rs$dist = ((max(rs$y) - rs$y)/diffy)*1000
rs$dist = abs(rs$dist)
rs$dist2 = c("a")
summary(rs$dist)
rs$dist2 = c("a")
rs$dist2[rs$dist <= 250] = c("Borda")
rs$dist2[rs$dist > 250] = c("Interior")
#Normalize Index values ==========================================
rs_norm <- rs %>%
group_by(index) %>%
mutate(value_norm = scale(value)) %>%
ungroup()
#NDVI ============================================================
mod_NDVI6 <- lmer(value_norm ~ treat*dist2*year + (dist2|year), data = subset(rs_norm, index == "ndvi"))
summary(mod_NDVI6)
#Plot results
plot(ggpredict(mod_NDVI6, terms = c("dist2", "treat")))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat")))
plot(ggpredict(mod_NDVI6, terms = c("dist2", "treat", "year")))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat")))
plot(ggpredict(mod_NDVI6, terms = c("dist2", "treat", "year")))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))
dotplot(ranef(mod_NDVI6,condVar=TRUE))
sjPlot::plot_model(mod_NDVI6)
sjPlot:: tab_model(mod_NDVI6)
#Separate before, during and after fire periods ==================
rs$cond = c("a")
rs$cond[rs$year <= 2004] = c("Pre_Fire")
rs$cond[rs$year > 2005] = c("Fire")
rs$cond[rs$year > 2011] = c("Recovery")
view(rs)
#Separate before, during and after fire periods ==================
rs$cond = c("a")
rs$cond[rs$year > 1984] = c("Pre_Fire")
rs$cond[rs$year > 2005] = c("Fire")
rs$cond[rs$year > 2011] = c("Recovery")
view(rs)
rs$cond[rs$year > 1984] = c("Pre_Fire")
rs$cond[rs$year > 2004] = c("Fire")
rs$cond[rs$year > 2011] = c("Recovery")
view(rs)
#Normalize Index values ==========================================
rs_norm <- rs %>%
group_by(index) %>%
mutate(value_norm = scale(value)) %>%
ungroup()
#NDVI ============================================================
mod_NDVI6 <- lmer(value_norm ~ treat*dist2*year + (dist2|year), data = subset(rs_norm, index == "ndvi"))
summary(mod_NDVI6)
mod_NDVI6b <- lmer(value_norm ~ treat*cond*year + (dist2|year), data = subset(rs_norm, index == "ndvi"))
summary(mod_NDVI6b)
plot(ggpredict(mod_NDVI6b, terms = c("dist2", "treat")))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat")))
plot(ggpredict(mod_NDVI6b, terms = c("cond", "treat")))
#Separate before, during and after fire periods ==================
rs$cond = c("a")
rs$cond[rs$year > 1984] = c("a_PreFire")
rs$cond[rs$year > 2004] = c("b_Fire")
rs$cond[rs$year > 2011] = c("c_Recovery")
#Normalize Index values ==========================================
rs_norm <- rs %>%
group_by(index) %>%
mutate(value_norm = scale(value)) %>%
ungroup()
mod_NDVI6b <- lmer(value_norm ~ treat*cond*year + (dist2|year), data = subset(rs_norm, index == "ndvi"))
summary(mod_NDVI6b)
mod_NDVI6b <- lmer(value_norm ~ treat*cond*year + (cond|year), data = subset(rs_norm, index == "ndvi"))
summary(mod_NDVI6b)
#Plot results
plot(ggpredict(mod_NDVI6, terms = c("dist2", "treat")))
plot(ggpredict(mod_NDVI6b, terms = c("cond", "treat")))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat")))
plot(ggpredict(mod_NDVI6, terms = c("cond", "treat", "year")))
plot(ggpredict(mod_NDVI6b, terms = c("year", "treat")))
plot(ggpredict(mod_NDVI6b, terms = c("cond", "treat", "year")))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))
plot(ggpredict(mod_NDVI6b, terms = c("year", "treat", "cond")))
mod_NDVI6b <- lmer(value_norm ~ treat*cond*dist2 + (cond|year), data = subset(rs_norm, index == "ndvi"))
summary(mod_NDVI6b)
plot(ggpredict(mod_NDVI6b, terms = c("cond", "treat")))
plot(ggpredict(mod_NDVI6b, terms = c("year", "treat")))
plot(ggpredict(mod_NDVI6b, terms = c("cond", "treat")))
plot(ggpredict(mod_NDVI6b, terms = c("cond", "treat", "year")))
plot(ggpredict(mod_NDVI6b, terms = c("year", "treat", "cond")))
plot(ggpredict(mod_NDVI6b, terms = c("year", "treat", "cond", "dist2")))
dotplot(ranef(mod_NDVI6,condVar=TRUE))
sjPlot::plot_model(mod_NDVI6)
dotplot(ranef(mod_NDVI6b,condVar=TRUE))
sjPlot::plot_model(mod_NDVI6b)
sjPlot:: tab_model(mod_NDVI6b)
#Plot results
plot(ggpredict(mod_NDVI6, terms = c("dist2", "treat")))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))
##########################################################
#Linear Mixed Models for VIs from PCA - Model6 (Landsat) #
#                                                        #
#Eduardo Q Marques 15-09-2021                            #
##########################################################
library(tidyverse)
library(reshape2)
library(ggeffects)
library(sjPlot)
library(lattice)
library(lme4)
dir_input <- "C:/Users/Eduardo Q Marques/Documents/Research/Doutorado/Banco de Dados Tanguro/Dados para analise cap1"
list.files(path = dir_input)
rs <- read_csv(file.path(dir_input, "Landsat_indexs_all_xy.csv"))
rs$treat <- ifelse(rs$treat == "control","aControl", as.character(rs$treat))
rs$treat <- ifelse(rs$treat == "b3yr", "B3yr", as.character(rs$treat))
rs$treat <- ifelse(rs$treat == "b1yr", "B1yr", as.character(rs$treat))
#Modify Data =====================================================
rs$year = substr(rs$year, 1,4)
rs$year = as.numeric(rs$year)
rs$index = as.character(rs$index)
rs$treat = as.character(rs$treat)
rs = rs %>% #Resume repeat years with mean
group_by(x, y, index, year, treat) %>%
summarise(value = mean(value))
#Calculate Distance of Edge ======================================
summary(rs$y)
min(rs$y) #-13.08343 = 1000 meters
max(rs$y) #-13.07422 = 0 meters
diffy = min(rs$y) - max(rs$y)
rs$dist = ((max(rs$y) - rs$y)/diffy)*1000
rs$dist = abs(rs$dist)
summary(rs$dist)
rs$dist2 = c("a")
rs$dist2[rs$dist <= 250] = c("Borda")
rs$dist2[rs$dist > 250] = c("Interior")
#Normalize Index values ==========================================
rs_norm <- rs %>%
group_by(index) %>%
mutate(value_norm = scale(value)) %>%
ungroup()
#NDVI ============================================================
mod_NDVI6 <- lmer(value_norm ~ treat*dist2*year + (dist2|year), data = subset(rs_norm, index == "ndvi"))
summary(mod_NDVI6)
#NDII ============================================================
mod_ndii6 <- lmer(value_norm ~ treat*dist2*year + (dist2|year), data = subset(rs_norm, index == "ndii"))
summary(mod_ndii6)
#Plot results
plot(ggpredict(mod_ndii6, terms = c("dist2", "treat")))
plot(ggpredict(mod_ndii6, terms = c("year", "treat")))
plot(ggpredict(mod_ndii6, terms = c("dist2", "treat", "year")))
plot(ggpredict(mod_ndii6, terms = c("year", "treat", "dist2")))
dotplot(ranef(mod_ndii6,condVar=TRUE))
sjPlot::plot_model(mod_ndii6)
sjPlot:: tab_model(mod_ndii6)
#NBR ============================================================
mod_nbr6 <- lmer(value_norm ~ treat*dist2*year + (dist2|year), data = subset(rs_norm, index == "nbr"))
summary(mod_nbr6)
#NBR ============================================================
mod_nbr6 <- lmer(value_norm ~ treat*dist2*year + (dist2|year), data = subset(rs_norm, index == "nbr"))
summary(mod_nbr6)
#Plot results
plot(ggpredict(mod_nb26, terms = c("dist2", "treat")))
#Plot results
plot(ggpredict(mod_nbr6, terms = c("dist2", "treat")))
plot(ggpredict(mod_nbr6, terms = c("year", "treat")))
plot(ggpredict(mod_nbr6, terms = c("dist2", "treat", "year")))
plot(ggpredict(mod_nbr6, terms = c("year", "treat", "dist2")))
dotplot(ranef(mod_nbr6,condVar=TRUE))
sjPlot::plot_model(mod_nbr6)
sjPlot:: tab_model(mod_nbr6)
#NBR2 ============================================================
mod_nbr26 <- lmer(value_norm ~ treat*dist2*year + (dist2|year), data = subset(rs_norm, index == "nbr2"))
summary(mod_nbr26)
#Plot results
plot(ggpredict(mod_nbr26, terms = c("dist2", "treat")))
plot(ggpredict(mod_nbr26, terms = c("year", "treat")))
plot(ggpredict(mod_nbr26, terms = c("dist2", "treat", "year")))
plot(ggpredict(mod_nbr26, terms = c("year", "treat", "dist2")))
dotplot(ranef(mod_nbr26,condVar=TRUE))
sjPlot::plot_model(mod_nbr26)
sjPlot:: tab_model(mod_nbr26)
#EVI ============================================================
mod_evi6 <- lmer(value_norm ~ treat*dist2*year + (dist2|year), data = subset(rs_norm, index == "evi"))
#EVI ============================================================
mod_evi6 <- lmer(value_norm ~ treat*dist2*year + (dist2|year), data = subset(rs_norm, index == "evi2"))
summary(mod_evi6)
#Plot results
plot(ggpredict(mod_evi6, terms = c("dist2", "treat")))
plot(ggpredict(mod_evi6, terms = c("year", "treat")))
plot(ggpredict(mod_evi6, terms = c("dist2", "treat", "year")))
plot(ggpredict(mod_evi6, terms = c("year", "treat", "dist2")))
dotplot(ranef(mod_evi6,condVar=TRUE))
sjPlot::plot_model(mod_evi6)
sjPlot:: tab_model(mod_evi6)
#GRND ============================================================
mod_grnd6 <- lmer(value_norm ~ treat*dist2*year + (dist2|year), data = subset(rs_norm, index == "grnd"))
summary(mod_grnd6)
#Plot results
plot(ggpredict(mod_grnd6, terms = c("dist2", "treat")))
plot(ggpredict(mod_grnd6, terms = c("year", "treat")))
plot(ggpredict(mod_grnd6, terms = c("dist2", "treat", "year")))
plot(ggpredict(mod_grnd6, terms = c("year", "treat", "dist2")))
dotplot(ranef(mod_grnd6,condVar=TRUE))
sjPlot::plot_model(mod_grnd6)
sjPlot:: tab_model(mod_grnd6)
#All Results ======================================================
library(ggpubr)
a = plot(ggpredict(mod_grnd6, terms = c("year", "treat", "dist2")))
b = plot(ggpredict(mod_ndii6, terms = c("year", "treat", "dist2")))
c = plot(ggpredict(mod_nbr6, terms = c("year", "treat", "dist2")))
d = plot(ggpredict(mod_nbr26, terms = c("year", "treat", "dist2")))
e = plot(ggpredict(mod_evi6, terms = c("year", "treat", "dist2")))
f = plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))
lm_plot = function(w,title){
w+ggtitle(title)+
xlab(NULL)+ylab(NULL)+
scale_color_manual(values = c("blue", "orange", "red"))
}
a = lm_plot(a, title = "GRND")
b = lm_plot(b, title = "NDII")
c = lm_plot(c, title = "NBR")
d = lm_plot(d, title = "NBR2")
e = lm_plot(e, title = "EVI")
f = lm_plot(f, title = "NDVI")
ggarrange(a, b, c, d, e, f,
common.legend = TRUE,
legend="right",
ncol = 2, nrow = 3)
?lmer
#NDVI ============================================================
mod_NDVI6 <- lmer(value_norm ~ treat*dist2*year + (dist2|year), data = subset(rs_norm, index == "ndvi"), REML = F)
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))
#NDVI ============================================================
mod_NDVI6 <- lmer(value_norm ~ treat*dist2*year + (dist2|year), data = subset(rs_norm, index == "ndvi"))
plot(ggpredict(mod_NDVI6, terms = c("year", "treat", "dist2")))
