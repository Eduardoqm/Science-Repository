#Geracao de indices com imagens Landsat para a Area1 - Tang
#Eduardo Q Marques /30/07/2019/
library(raster)
library(rasterVis)
--------------------
#List of satellite bands (menos a banda 6)
list1 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop5", pattern = "band1.tif$", full.names=TRUE,recursive=TRUE)
list2 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop5", pattern = "band2.tif$", full.names=TRUE,recursive=TRUE)
list3 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop5", pattern = "band3.tif$", full.names=TRUE,recursive=TRUE)
list4 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop5", pattern = "band4.tif$", full.names=TRUE,recursive=TRUE)
list5 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop5", pattern = "band5.tif$", full.names=TRUE,recursive=TRUE)
list7 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop5", pattern = "band7.tif$", full.names=TRUE,recursive=TRUE)
#TM-------------------------------------------------------------------------------------------------------------------
#List of satellite bands (menos a banda 6)
list1 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop5", pattern = "band1.tif$", full.names=TRUE,recursive=TRUE)
list2 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop5", pattern = "band2.tif$", full.names=TRUE,recursive=TRUE)
list3 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop5", pattern = "band3.tif$", full.names=TRUE,recursive=TRUE)
list4 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop5", pattern = "band4.tif$", full.names=TRUE,recursive=TRUE)
list5 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop5", pattern = "band5.tif$", full.names=TRUE,recursive=TRUE)
list7 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop5", pattern = "band7.tif$", full.names=TRUE,recursive=TRUE)
#Convert data into rasterbrick for faster processing
b1 <- brick(stack(list1))
b2 <- brick(stack(list2))
b3 <- brick(stack(list3))
b4 <- brick(stack(list4))
b5 <- brick(stack(list5))
b7 <- brick(stack(list7))
b1 <- b1/10000
b2 <- b2/10000
b3 <- b3/10000
b4 <- b4/10000
b5 <- b5/10000
b7 <- b7/10000
#Pigment Specific Simple Ratio (PSSR)
pssr <- (b4-b3)
plot(pssr)
b1 <- brick(stack(list1))
b2 <- brick(stack(list2))
b3 <- brick(stack(list3))
b4 <- brick(stack(list4))
b5 <- brick(stack(list5))
b7 <- brick(stack(list7))
#Pigment Specific Simple Ratio (PSSR)
pssr <- (b4-b3)
plot(pssr)
#Normalize
b1 <- b1/10000
b2 <- b2/10000
b3 <- b3/10000
b4 <- b4/10000
b5 <- b5/10000
b7 <- b7/10000
#Pigment Specific Simple Ratio (PSSR)
pssr <- (b4-b3)
plot(pssr)
plot(pssr[[15]])
#OLI------------------------------------------------------------------------------------------------------------------
#List of satellite bands(banda 2 ate a banda 7 sÃ£o equivalentes as bandas do landsat5)
list2 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop8", pattern = "band2.tif$", full.names=TRUE,recursive=TRUE)
list3 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop8", pattern = "band3.tif$", full.names=TRUE,recursive=TRUE)
list4 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop8", pattern = "band4.tif$", full.names=TRUE,recursive=TRUE)
list5 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop8", pattern = "band5.tif$", full.names=TRUE,recursive=TRUE)
list6 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop8", pattern = "band6.tif$", full.names=TRUE,recursive=TRUE)
list7 <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Landsat/landsatcrop8", pattern = "band7.tif$", full.names=TRUE,recursive=TRUE)
#Convert data into rasterbrick for faster processing
b2 <- brick(stack(list2))
b3 <- brick(stack(list3))
b4 <- brick(stack(list4))
b5 <- brick(stack(list5))
b6 <- brick(stack(list6))
b7 <- brick(stack(list7))
#Normalize
b2 <- b2/10000
b3 <- b3/10000
b4 <- b4/10000
b5 <- b5/10000
b6 <- b6/10000
b7 <- b7/10000
#Pigment Specific Simple Ratio (PSSR)
pssr_b <- (b5-b4)
plot(pssr_b)
plot(pssr_b[[15]])
plot(pssr_b[[1]])
#Extrair dados do Landast, Hyperion para os plots A, B e C do meu doutorado
#Eduardo Q Marques /29/08/2019/
library(raster)
library(rgdal)
library(ggplot2)
library(reshape2)
library(dplyr)
#Temporal scale================================================================================
#Landsat -- obs: Just change de folder name to chande the index and choose the graphic
list <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Banco de Dados Tanguro/Tanguro Indices/Landsat/EVI2", pattern = ".tif$", full.names=TRUE,recursive=TRUE)
index <- stack(list)
#Abrir os shapes para amostrar pixels (100 pontos por shape)
area1 <-readOGR(dsn = "C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Banco de Dados Tanguro/shapes",layer="Polygon_A_B_C")
area1 = spTransform(area1, crs(index))
#Extrair valor dos pixels
crt <- extract(index, area1[1,])#PLot A
b3yr <- extract(index, area1[2,])#PLot B
b1yr <- extract(index, area1[3,])#PLot c
a <- melt(crt)
colnames(a) = c('id', 'data', 'controle')
c <- melt(b1yr)
colnames(c) = c('id', 'data', 'b1yr')
b <- melt(b3yr)
colnames(b) = c('id', 'data', 'b3yr')
df = as.data.frame(cbind(a, b, c))
df <- df[,c(2, 3, 7, 11)]
df$data = substr(df$data, 18, 25)
#Median NDVI per year
df_md <- df
df_md$data = substr(df_md$data, 1, 4)
df_md = df_md %>%
group_by(data) %>%
summarise(controle = median(controle),
b3yr = median(b3yr),
b1yr = median(b1yr))
#Plots
gg <- melt(df_md, id.vars="data")
colnames(gg) = c('Data', 'Parcela', 'Refl')
#EVI =======================
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
geom_point()+
labs(fill= "Plot",x="Ano",y="EVI")+
annotate("text", x = c(8.5, 11.5, 15.5), y = 0.5, label = "Seca")+
annotate("segment", x = c(8.5, 11.5, 15.5), y = 0.495,
xend = c(8.5, 11.5, 15.5), yend = c(0.48, 0.48, 0.48),
arrow = arrow(angle = 20, length = unit(2, "mm"), type = "closed"))+
annotate("text", x = 2.5, y = 0.33, label = "Pré-fogo", colour = "darkgreen")+
annotate("rect", xmin = 1, xmax = 5, ymin = 0.32, ymax = 0.31, alpha = 0.9, fill = "darkgreen")+
annotate("text", x = 8.5, y = 0.33, label = "Experimento de fogo", colour = "red")+
annotate("rect", xmin = 5, xmax = 12, ymin = 0.32, ymax = 0.31, alpha = 0.9, fill = "red")+
annotate("text", x = c(5.5, 8.5, 11.5), y = 0.315, label = "xx", colour = "yellow")+
annotate("text", x = c(6.5, 7.5, 10.5), y = 0.315, label = "x", colour = "yellow")+
annotate("text", x = 15.5, y = 0.33, label = "Periodo de recuperação", colour = "darkblue")+
annotate("rect", xmin = 12, xmax = 19, ymin = 0.32, ymax = 0.31, alpha = 0.9, fill = "darkblue")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
#EVI =======================
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
geom_point()+
labs(fill= "Plot",x="Ano",y="EVI")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
#EVI =======================
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
geom_smooth()+
geom_point()+
labs(fill= "Plot",x="Ano",y="EVI")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
#EVI =======================
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
geom_smooth(method = lm)+
geom_point()+
labs(fill= "Plot",x="Ano",y="EVI")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
#EVI =======================
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
geom_smooth(method = lm, orientation = "y")+
geom_point()+
labs(fill= "Plot",x="Ano",y="EVI")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
#EVI =======================
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
geom_smooth(orientation = "y")+
geom_point()+
labs(fill= "Plot",x="Ano",y="EVI")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
#EVI =======================
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
geom_smooth(aes(group=Parcela), orientation = "y")+
geom_point()+
labs(fill= "Plot",x="Ano",y="EVI")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
#EVI =======================
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
geom_smooth(aes(group=Parcela))+
geom_point()+
labs(fill= "Plot",x="Ano",y="EVI")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
