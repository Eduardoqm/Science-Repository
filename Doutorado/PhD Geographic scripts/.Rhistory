annotate("segment", x = c(8.5, 11.5, 15.5), y = 0.2,
xend = c(8.5, 11.5, 15.5), yend = c(0.17, 0.17, 0.17),
arrow = arrow(angle = 20, length = unit(2, "mm"), type = "closed"))+
annotate("text", x = 2.5, y = 0.03, label = "Pré-fogo", colour = "darkgreen")+
annotate("rect", xmin = 1, xmax = 5, ymin = 0.02, ymax = 0.01, alpha = 0.9, fill = "darkgreen")+
annotate("text", x = 8.5, y = 0.03, label = "Experimento de fogo", colour = "red")+
annotate("rect", xmin = 5, xmax = 12, ymin = 0.02, ymax = 0.01, alpha = 0.9, fill = "red")+
annotate("text", x = c(5.5, 8.5, 11.5), y = 0.017, label = "xx", colour = "yellow")+
annotate("text", x = c(6.5, 7.5, 10.5), y = 0.017, label = "x", colour = "yellow")+
annotate("text", x = 15.5, y = 0.03, label = "Periodo de recuperação", colour = "darkblue")+
annotate("rect", xmin = 12, xmax = 19, ymin = 0.02, ymax = 0.01, alpha = 0.9, fill = "darkblue")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
#geom_line(aes(group=Parcela), size = 1, linetype = "dashed")+
geom_point()+
#stat_smooth(aes(group=Parcela), method = "loess", formula = y ~ x, size = 0.5, alpha = 0.15)+
labs(fill= "Plot",x="Ano",y="NDWI")+
annotate("text", x = c(8.5, 11.5, 15.5), y = 0.6, label = "Seca")+
annotate("segment", x = c(8.5, 11.5, 15.5), y = 0.55,
xend = c(8.5, 11.5, 15.5), yend = c(0.5, 0.5, 0.5),
arrow = arrow(angle = 20, length = unit(2, "mm"), type = "closed"))+
annotate("text", x = 2.5, y = 0.03, label = "Pré-fogo", colour = "darkgreen")+
annotate("rect", xmin = 1, xmax = 5, ymin = 0.02, ymax = 0.01, alpha = 0.9, fill = "darkgreen")+
annotate("text", x = 8.5, y = 0.03, label = "Experimento de fogo", colour = "red")+
annotate("rect", xmin = 5, xmax = 12, ymin = 0.02, ymax = 0.01, alpha = 0.9, fill = "red")+
annotate("text", x = c(5.5, 8.5, 11.5), y = 0.017, label = "xx", colour = "yellow")+
annotate("text", x = c(6.5, 7.5, 10.5), y = 0.017, label = "x", colour = "yellow")+
annotate("text", x = 15.5, y = 0.03, label = "Periodo de recuperação", colour = "darkblue")+
annotate("rect", xmin = 12, xmax = 19, ymin = 0.02, ymax = 0.01, alpha = 0.9, fill = "darkblue")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
#geom_line(aes(group=Parcela), size = 1, linetype = "dashed")+
geom_point()+
#stat_smooth(aes(group=Parcela), method = "loess", formula = y ~ x, size = 0.5, alpha = 0.15)+
labs(fill= "Plot",x="Ano",y="NDWI")+
annotate("text", x = c(8.5, 11.5, 15.5), y = 0.6, label = "Seca")+
annotate("segment", x = c(8.5, 11.5, 15.5), y = 0.55,
xend = c(8.5, 11.5, 15.5), yend = c(0.5, 0.5, 0.5),
arrow = arrow(angle = 20, length = unit(2, "mm"), type = "closed"))+
annotate("text", x = 2.5, y = 0.43, label = "Pré-fogo", colour = "darkgreen")+
annotate("rect", xmin = 1, xmax = 5, ymin = 0.02, ymax = 0.01, alpha = 0.9, fill = "darkgreen")+
annotate("text", x = 8.5, y = 0.43, label = "Experimento de fogo", colour = "red")+
annotate("rect", xmin = 5, xmax = 12, ymin = 0.02, ymax = 0.01, alpha = 0.9, fill = "red")+
annotate("text", x = c(5.5, 8.5, 11.5), y = 0.017, label = "xx", colour = "yellow")+
annotate("text", x = c(6.5, 7.5, 10.5), y = 0.017, label = "x", colour = "yellow")+
annotate("text", x = 15.5, y = 0.43, label = "Periodo de recuperação", colour = "darkblue")+
annotate("rect", xmin = 12, xmax = 19, ymin = 0.02, ymax = 0.01, alpha = 0.9, fill = "darkblue")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
#geom_line(aes(group=Parcela), size = 1, linetype = "dashed")+
geom_point()+
#stat_smooth(aes(group=Parcela), method = "loess", formula = y ~ x, size = 0.5, alpha = 0.15)+
labs(fill= "Plot",x="Ano",y="NDWI")+
annotate("text", x = c(8.5, 11.5, 15.5), y = 0.6, label = "Seca")+
annotate("segment", x = c(8.5, 11.5, 15.5), y = 0.55,
xend = c(8.5, 11.5, 15.5), yend = c(0.5, 0.5, 0.5),
arrow = arrow(angle = 20, length = unit(2, "mm"), type = "closed"))+
annotate("text", x = 2.5, y = 0.43, label = "Pré-fogo", colour = "darkgreen")+
annotate("rect", xmin = 1, xmax = 5, ymin = 0.42, ymax = 0.41, alpha = 0.9, fill = "darkgreen")+
annotate("text", x = 8.5, y = 0.43, label = "Experimento de fogo", colour = "red")+
annotate("rect", xmin = 5, xmax = 12, ymin = 0.02, ymax = 0.01, alpha = 0.9, fill = "red")+
annotate("text", x = c(5.5, 8.5, 11.5), y = 0.017, label = "xx", colour = "yellow")+
annotate("text", x = c(6.5, 7.5, 10.5), y = 0.017, label = "x", colour = "yellow")+
annotate("text", x = 15.5, y = 0.43, label = "Periodo de recuperação", colour = "darkblue")+
annotate("rect", xmin = 12, xmax = 19, ymin = 0.02, ymax = 0.01, alpha = 0.9, fill = "darkblue")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
#geom_line(aes(group=Parcela), size = 1, linetype = "dashed")+
geom_point()+
#stat_smooth(aes(group=Parcela), method = "loess", formula = y ~ x, size = 0.5, alpha = 0.15)+
labs(fill= "Plot",x="Ano",y="NDWI")+
annotate("text", x = c(8.5, 11.5, 15.5), y = 0.6, label = "Seca")+
annotate("segment", x = c(8.5, 11.5, 15.5), y = 0.55,
xend = c(8.5, 11.5, 15.5), yend = c(0.5, 0.5, 0.5),
arrow = arrow(angle = 20, length = unit(2, "mm"), type = "closed"))+
annotate("text", x = 2.5, y = 0.43, label = "Pré-fogo", colour = "darkgreen")+
annotate("rect", xmin = 1, xmax = 5, ymin = 0.41, ymax = 0.40, alpha = 0.9, fill = "darkgreen")+
annotate("text", x = 8.5, y = 0.43, label = "Experimento de fogo", colour = "red")+
annotate("rect", xmin = 5, xmax = 12, ymin = 0.02, ymax = 0.01, alpha = 0.9, fill = "red")+
annotate("text", x = c(5.5, 8.5, 11.5), y = 0.017, label = "xx", colour = "yellow")+
annotate("text", x = c(6.5, 7.5, 10.5), y = 0.017, label = "x", colour = "yellow")+
annotate("text", x = 15.5, y = 0.43, label = "Periodo de recuperação", colour = "darkblue")+
annotate("rect", xmin = 12, xmax = 19, ymin = 0.02, ymax = 0.01, alpha = 0.9, fill = "darkblue")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
#geom_line(aes(group=Parcela), size = 1, linetype = "dashed")+
geom_point()+
#stat_smooth(aes(group=Parcela), method = "loess", formula = y ~ x, size = 0.5, alpha = 0.15)+
labs(fill= "Plot",x="Ano",y="NDWI")+
annotate("text", x = c(8.5, 11.5, 15.5), y = 0.6, label = "Seca")+
annotate("segment", x = c(8.5, 11.5, 15.5), y = 0.55,
xend = c(8.5, 11.5, 15.5), yend = c(0.5, 0.5, 0.5),
arrow = arrow(angle = 20, length = unit(2, "mm"), type = "closed"))+
annotate("text", x = 2.5, y = 0.43, label = "Pré-fogo", colour = "darkgreen")+
annotate("rect", xmin = 1, xmax = 5, ymin = 0.41, ymax = 0.40, alpha = 0.9, fill = "darkgreen")+
annotate("text", x = 8.5, y = 0.43, label = "Experimento de fogo", colour = "red")+
annotate("rect", xmin = 5, xmax = 12, ymin = 0.41, ymax = 0.40, alpha = 0.9, fill = "red")+
annotate("text", x = c(5.5, 8.5, 11.5), y = 0.017, label = "xx", colour = "yellow")+
annotate("text", x = c(6.5, 7.5, 10.5), y = 0.017, label = "x", colour = "yellow")+
annotate("text", x = 15.5, y = 0.43, label = "Periodo de recuperação", colour = "darkblue")+
annotate("rect", xmin = 12, xmax = 19, ymin = 0.41, ymax = 0.40, alpha = 0.9, fill = "darkblue")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
#geom_line(aes(group=Parcela), size = 1, linetype = "dashed")+
geom_point()+
#stat_smooth(aes(group=Parcela), method = "loess", formula = y ~ x, size = 0.5, alpha = 0.15)+
labs(fill= "Plot",x="Ano",y="NDWI")+
annotate("text", x = c(8.5, 11.5, 15.5), y = 0.6, label = "Seca")+
annotate("segment", x = c(8.5, 11.5, 15.5), y = 0.55,
xend = c(8.5, 11.5, 15.5), yend = c(0.5, 0.5, 0.5),
arrow = arrow(angle = 20, length = unit(2, "mm"), type = "closed"))+
annotate("text", x = 2.5, y = 0.43, label = "Pré-fogo", colour = "darkgreen")+
annotate("rect", xmin = 1, xmax = 5, ymin = 0.41, ymax = 0.40, alpha = 0.9, fill = "darkgreen")+
annotate("text", x = 8.5, y = 0.43, label = "Experimento de fogo", colour = "red")+
annotate("rect", xmin = 5, xmax = 12, ymin = 0.41, ymax = 0.40, alpha = 0.9, fill = "red")+
annotate("text", x = c(5.5, 8.5, 11.5), y = 0.415, label = "xx", colour = "yellow")+
annotate("text", x = c(6.5, 7.5, 10.5), y = 0.415, label = "x", colour = "yellow")+
annotate("text", x = 15.5, y = 0.43, label = "Periodo de recuperação", colour = "darkblue")+
annotate("rect", xmin = 12, xmax = 19, ymin = 0.41, ymax = 0.40, alpha = 0.9, fill = "darkblue")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
#geom_line(aes(group=Parcela), size = 1, linetype = "dashed")+
geom_point()+
#stat_smooth(aes(group=Parcela), method = "loess", formula = y ~ x, size = 0.5, alpha = 0.15)+
labs(fill= "Plot",x="Ano",y="NDWI")+
annotate("text", x = c(8.5, 11.5, 15.5), y = 0.6, label = "Seca")+
annotate("segment", x = c(8.5, 11.5, 15.5), y = 0.55,
xend = c(8.5, 11.5, 15.5), yend = c(0.5, 0.5, 0.5),
arrow = arrow(angle = 20, length = unit(2, "mm"), type = "closed"))+
annotate("text", x = 2.5, y = 0.43, label = "Pré-fogo", colour = "darkgreen")+
annotate("rect", xmin = 1, xmax = 5, ymin = 0.41, ymax = 0.40, alpha = 0.9, fill = "darkgreen")+
annotate("text", x = 8.5, y = 0.43, label = "Experimento de fogo", colour = "red")+
annotate("rect", xmin = 5, xmax = 12, ymin = 0.41, ymax = 0.40, alpha = 0.9, fill = "red")+
annotate("text", x = c(5.5, 8.5, 11.5), y = 0.415, label = "xx", colour = "yellow")+
annotate("text", x = c(6.5, 7.5, 10.5), y = 0.415, label = "x", colour = "yellow")+
annotate("text", x = 15.5, y = 0.43, label = "Periodo de recuperação", colour = "darkblue")+
annotate("rect", xmin = 12, xmax = 19, ymin = 0.42, ymax = 0.41, alpha = 0.9, fill = "darkblue")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
#geom_line(aes(group=Parcela), size = 1, linetype = "dashed")+
geom_point()+
#stat_smooth(aes(group=Parcela), method = "loess", formula = y ~ x, size = 0.5, alpha = 0.15)+
labs(fill= "Plot",x="Ano",y="NDWI")+
annotate("text", x = c(8.5, 11.5, 15.5), y = 0.6, label = "Seca")+
annotate("segment", x = c(8.5, 11.5, 15.5), y = 0.55,
xend = c(8.5, 11.5, 15.5), yend = c(0.5, 0.5, 0.5),
arrow = arrow(angle = 20, length = unit(2, "mm"), type = "closed"))+
annotate("text", x = 2.5, y = 0.43, label = "Pré-fogo", colour = "darkgreen")+
annotate("rect", xmin = 1, xmax = 5, ymin = 0.42, ymax = 0.41, alpha = 0.9, fill = "darkgreen")+
annotate("text", x = 8.5, y = 0.43, label = "Experimento de fogo", colour = "red")+
annotate("rect", xmin = 5, xmax = 12, ymin = 0.42, ymax = 0.41, alpha = 0.9, fill = "red")+
annotate("text", x = c(5.5, 8.5, 11.5), y = 0.415, label = "xx", colour = "yellow")+
annotate("text", x = c(6.5, 7.5, 10.5), y = 0.415, label = "x", colour = "yellow")+
annotate("text", x = 15.5, y = 0.43, label = "Periodo de recuperação", colour = "darkblue")+
annotate("rect", xmin = 12, xmax = 19, ymin = 0.42, ymax = 0.41, alpha = 0.9, fill = "darkblue")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
ggplot(gg, aes(Data,Refl, col=Parcela))+
geom_line(aes(group=Parcela), size = 1)+
#geom_line(aes(group=Parcela), size = 1, linetype = "dashed")+
geom_point()+
#stat_smooth(aes(group=Parcela), method = "loess", formula = y ~ x, size = 0.5, alpha = 0.15)+
labs(fill= "Plot",x="Ano",y="NDWI")+
annotate("text", x = c(8.5, 11.5, 15.5), y = 0.6, label = "Seca")+
annotate("segment", x = c(8.5, 11.5, 15.5), y = 0.59,
xend = c(8.5, 11.5, 15.5), yend = c(0.57, 0.57, 0.57),
arrow = arrow(angle = 20, length = unit(2, "mm"), type = "closed"))+
annotate("text", x = 2.5, y = 0.43, label = "Pré-fogo", colour = "darkgreen")+
annotate("rect", xmin = 1, xmax = 5, ymin = 0.42, ymax = 0.41, alpha = 0.9, fill = "darkgreen")+
annotate("text", x = 8.5, y = 0.43, label = "Experimento de fogo", colour = "red")+
annotate("rect", xmin = 5, xmax = 12, ymin = 0.42, ymax = 0.41, alpha = 0.9, fill = "red")+
annotate("text", x = c(5.5, 8.5, 11.5), y = 0.415, label = "xx", colour = "yellow")+
annotate("text", x = c(6.5, 7.5, 10.5), y = 0.415, label = "x", colour = "yellow")+
annotate("text", x = 15.5, y = 0.43, label = "Periodo de recuperação", colour = "darkblue")+
annotate("rect", xmin = 12, xmax = 19, ymin = 0.42, ymax = 0.41, alpha = 0.9, fill = "darkblue")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
#Beautiful maps to show in presentations
#Eduardo Q Marques 10/08/2019
library(raster)
library(rasterVis)
library(rgdal)
#Vectors
area1 = readOGR(dsn = "C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/shapes",layer="Area1big")
plots = readOGR(dsn = "C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/shapes",layer="Polygon_A_B_C")
#NDVI
a = stack(list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Tanguro Indices/NDVI", pattern = ".tif$", full.names=TRUE,recursive=TRUE))
mapa = stack(a[[33]], a[[35]], a[[45]], a[[52]], a[[21]])
names(mapa) = c('2004', '2005', '2008', '2011', '2019')
#Transform vectors
area1 = spTransform(area1, crs(mapa))
plots = spTransform(plots, crs(mapa))
#Crop rasters
mapa = crop(mapa, area1)
b = levelplot(mapa[[1]], margin = FALSE, par.settings = RdBuTheme, main = "NDVI 2004")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[2]], margin = FALSE, par.settings = RdBuTheme, main = "NDVI 2005")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[3]], margin = FALSE, par.settings = RdBuTheme, main = "NDVI 2008")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[4]], margin = FALSE, par.settings = RdBuTheme, main = "NDVI 2011")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[5]], margin = FALSE, par.settings = RdBuTheme, main = "NDVI 2019")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
#EVI
a = stack(list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Tanguro Indices/EVI2", pattern = ".tif$", full.names=TRUE,recursive=TRUE))
mapa = stack(a[[33]], a[[35]], a[[45]], a[[52]], a[[21]])
names(mapa) = c('2004', '2005', '2008', '2011', '2019')
#Crop rasters
mapa = crop(mapa, area1)
b = levelplot(mapa[[1]], margin = FALSE, par.settings = RdBuTheme, main = "EVI 2004")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[2]], margin = FALSE, par.settings = RdBuTheme, main = "EVI 2005")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[3]], margin = FALSE, par.settings = RdBuTheme, main = "EVI 2008")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[4]], margin = FALSE, par.settings = RdBuTheme, main = "EVI 2011")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[5]], margin = FALSE, par.settings = RdBuTheme, main = "EVI 2019")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
#NDMI
a = stack(list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Tanguro Indices/NDMI", pattern = ".tif$", full.names=TRUE,recursive=TRUE))
mapa = stack(a[[33]], a[[35]], a[[45]], a[[52]], a[[21]])
names(mapa) = c('2004', '2005', '2008', '2011', '2019')
#Crop rasters
mapa = crop(mapa, area1)
b = levelplot(mapa[[1]], margin = FALSE, par.settings = RdBuTheme, main = "NDMI 2004")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[2]], margin = FALSE, par.settings = RdBuTheme, main = "NDMI 2005")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[3]], margin = FALSE, par.settings = RdBuTheme, main = "NDMI 2008")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[4]], margin = FALSE, par.settings = RdBuTheme, main = "NDMI 2011")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[5]], margin = FALSE, par.settings = RdBuTheme, main = "NDMI 2019")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
#GRND
a = stack(list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Tanguro Indices/GRND", pattern = ".tif$", full.names=TRUE,recursive=TRUE))
mapa = stack(a[[33]], a[[35]], a[[45]], a[[52]], a[[21]])
names(mapa) = c('2004', '2005', '2008', '2011', '2019')
#Crop rasters
mapa = crop(mapa, area1)
b = levelplot(mapa[[1]], margin = FALSE, par.settings = RdBuTheme, main = "GRND 2004")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[2]], margin = FALSE, par.settings = RdBuTheme, main = "GRND 2005")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[3]], margin = FALSE, par.settings = RdBuTheme, main = "GRND 2008")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[4]], margin = FALSE, par.settings = RdBuTheme, main = "GRND 2011")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[5]], margin = FALSE, par.settings = RdBuTheme, main = "GRND 2019")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
#NDWI
a = stack(list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Tanguro Indices/NDWI", pattern = ".tif$", full.names=TRUE,recursive=TRUE))
mapa = stack(a[[33]], a[[35]], a[[45]], a[[52]], a[[21]])
names(mapa) = c('2004', '2005', '2008', '2011', '2019')
#Crop rasters
mapa = crop(mapa, area1)
b = levelplot(mapa[[1]], margin = FALSE, par.settings = RdBuTheme, main = "NDWI 2004")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[2]], margin = FALSE, par.settings = RdBuTheme, main = "NDWI 2005")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[3]], margin = FALSE, par.settings = RdBuTheme, main = "NDWI 2008")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[4]], margin = FALSE, par.settings = RdBuTheme, main = "NDWI 2011")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa[[5]], margin = FALSE, par.settings = RdBuTheme, main = "NDWI 2019")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
b = levelplot(mapa, margin = FALSE, par.settings = RdBuTheme, main = "NDWI 2019")
b + layer(sp.lines(plots, lwd=2.0, col='black'))
#Extrair dados do Landast, Hyperion para os plots A, B e C do meu doutorado
#Eduardo Q Marques /29/08/2019/
library(raster)
library(rgdal)
library(ggplot2)
library(reshape2)
library(dplyr)
#Temporal scale====================================================================================
#Landsat -- obs: Just change de folder name to chande the index and choose the graphic
list <- list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Tanguro Indices/Landsat/NDVI", pattern = ".tif$", full.names=TRUE,recursive=TRUE)
index <- stack(list)
#Abrir os shapes para amostrar pixels (100 pontos por shape)
area1 <-readOGR(dsn = "C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/shapes/Amostra_poly",layer="Grid_ABC_100m")
area1 = spTransform(area1, crs(index))
plot(index[[9]])
plot(area1, add=T)
plot(area1[1,], add=T)
plot(index[[9]])
plot(area1[1,], add=T)
plot(area1[1,10], add=T)
plot(area1[1,9], add=T)
plot(area1[2,], add=T)
plot(area1[3,], add=T)
plot(area1[4,], add=T)
plot(area1[5,], add=T)
plot(area1[6,], add=T)
plot(index[[9]])
for (x in 1:30) {
plot(area1[x,], add=TRUE)
}
for (x in 1:29) {
plot(area1[x,], add=TRUE)
}
plot(index[[9]])
for (x in 1:29) {
plot(area1[x,], add=TRUE)
}
plot(index[[9]])
for (x in 1:30) {
plot(index[[9]])
plot(area1[x,], add=TRUE)
}
for (x in 1:30) {
print(x)
}
print(x, 2)
for (x in 1:30) {
print(x, 2)
}
print(x, by = 2)
for (x in 1:30) {
print(x, by = 2)
}
for (x in 1:30, by=2) {
print(x)
}
for (x in seq(1:30, by=2)) {
print(x)
}
s = seq(1:30, by=2)
seq
s = seq(1,30, by=2)
s
for (x in s) {
print(x)
}
s = seq(3,30, by=3)
for (x in s) {
print(x)
}
controle = seq(3,30, by=3)
for (x in controle) {
plot(index[[9]])
plot(area1[x,], add=TRUE)
}
controle = seq(3,30, by=3)
for (x in controle) {
plot(index[[9]])
plot(area1[x,], add=TRUE)
}
#Sequence
crt_seq = seq(3,30, by=3)
for (x in crt_seq) {
plot(index[[9]])
plot(area1[x,], add=TRUE)
}
b3yr_seq = seq(2,30, by=3)
for (x in b3yr_seq) {
plot(index[[9]])
plot(area1[x,], add=TRUE)
}
b1yr_seq = seq(2,30, by=3)
for (x in b1yr_seq) {
plot(index[[9]])
plot(area1[x,], add=TRUE)
}
b1yr_seq = seq(1,30, by=3)
for (x in b1yr_seq) {
plot(index[[9]])
plot(area1[x,], add=TRUE)
}
crt_seq = seq(3,30, by=3)
for (x in crt_seq) {
a <- extract(index, area1[x,])
}
View(area1)
View(a)
crt_seq = seq(3,30, by=3)
for (x in crt_seq) {
crt <- extract(index, area1[x,])
}
a <- melt(crt)
View(a)
View(area1)
crt_seq = seq(3,30, by=3)
for (x in crt_seq) {
crt <- extract(index, area1[x,])
a <- melt(crt)
a$gradient = a$gradient(area1@data$gradiente)
colnames(a) = c('id', 'data', 'controle')
}
crt_seq = seq(3,30, by=3)
for (x in crt_seq) {
crt <- extract(index, area1[x,])
a <- melt(crt)
a$gradient = a$gradient(area1@data$gradiente)
#colnames(a) = c('id', 'data', 'controle')
}
crt_seq = seq(3,30, by=3)
for (x in crt_seq) {
crt <- extract(index, area1[x,])
a <- melt(crt)
a$gradient = a$gradient(area1[x,]@data$gradiente)
#colnames(a) = c('id', 'data', 'controle')
}
library(raster)
library(rgdal)
library(ggplot2)
library(reshape2)
library(dplyr)
#Temporal scale====================================================================================
#Landsat -- obs: Just change de folder name to chande the index and choose the graphic
index <- raster("C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Tanguro Indices/Hyperion/2008/msi-2008.tif")
#Abrir os shapes para amostrar pixels (100 pontos por shape)
area1 <-readOGR(dsn = "C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/shapes/Amostra_poly",layer="Grid_ABC_100m")
area1 = spTransform(area1, crs(index))
#Sequence
crt_seq = seq(3,30, by=3)
for (x in crt_seq) {
plot(index)
plot(area1[x,], add=TRUE)
}
b3yr_seq = seq(2,30, by=3)
for (x in b3yr_seq) {
plot(index)
plot(area1[x,], add=TRUE)
}
b1yr_seq = seq(1,30, by=3)
for (x in b1yr_seq) {
plot(index)
plot(area1[x,], add=TRUE)
}
#Extrair valor dos pixels
b3yr_seq = seq(2,30, by=3)
for (x in b3yr_seq) {
b3yr <- extract(index, area1[x,])
b <- melt(b3yr)
a$gradient = a$gradient(area1[x,]@data$gradiente)
#colnames(a) = c('id', 'data', 'controle')
}
#Extrair valor dos pixels
b3yr_seq = seq(2,30, by=3)
for (x in b3yr_seq) {
b3yr <- extract(index, area1[x,])
b <- melt(b3yr)
b$gradient = b$gradient(area1[x,]@data$gradiente)
#colnames(a) = c('id', 'data', 'controle')
}
View(b)
#Extrair valor dos pixels
b3yr_seq = seq(2,30, by=3)
for (x in b3yr_seq) {
b3yr <- extract(index, area1[x,])
b <- melt(b3yr)
#b$gradient = b$gradient(area1[x,]@data$gradiente)
#colnames(a) = c('id', 'data', 'controle')
}
#Extrair dados do Landast, Hyperion para os plots A, B e C do meu doutorado
#Eduardo Q Marques /29/08/2019/
library(raster)
library(rgdal)
library(ggplot2)
library(reshape2)
library(dplyr)
#Temporal scale====================================================================================
#Landsat -- obs: Just change de folder name to chande the index and choose the graphic
index <- raster("C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/Tanguro Indices/Hyperion/2008/msi-2008.tif")
#Abrir os shapes para amostrar pixels (100 pontos por shape)
area1 <-readOGR(dsn = "C:/Users/Eduardo Q Marques/Documents/My Jobs/Doutorado/Deposito/Banco de Dados Tanguro/shapes/Amostra_poly",layer="Grid_ABC_100m")
area1 = spTransform(area1, crs(index))
#Sequence
crt_seq = seq(3,30, by=3)
for (x in crt_seq) {
plot(index)
plot(area1[x,], add=TRUE)
}
b3yr_seq = seq(2,30, by=3)
for (x in b3yr_seq) {
plot(index)
plot(area1[x,], add=TRUE)
}
b1yr_seq = seq(1,30, by=3)
for (x in b1yr_seq) {
plot(index)
plot(area1[x,], add=TRUE)
}
#Extrair valor dos pixels
b3yr_seq = seq(2,30, by=3)
for (x in b3yr_seq) {
b3yr <- extract(index, area1[x,])
b <- melt(b3yr)
#b$gradient = b$gradient(area1[x,]@data$gradiente)
#colnames(a) = c('id', 'data', 'controle')
}
View(b)
View(b3yr)
