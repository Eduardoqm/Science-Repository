ggplot(ext, aes(Var2, value))+
geom_line(aes(group = 1), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if (g == "point") {
ggplot(ext, aes(Var2, value))+
geom_point(aes(group = 1), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "boxplot"){
ggplot(ext, aes(Var2, value))+
geom_boxplot()+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "bar"){
ggplot(ext, aes(Var2, value))+
geom_bar(stat = "identity")+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else if(g == "area"){
ggplot(ext, aes(Var2, value))+
geom_area(aes(group = 1))+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else
print("Use a valid method to plot!")
}
###############################################
#       TEMPORAL SERIES PACKAGE (Tests)       #
#          => A Temporal scale <==            #
# By: Eduardo Q Marques   12-02-2020          #
###############################################
#This script is for construction and test my oun package to work with temporal series and satelitte images
library(raster)
library(rgdal)
#Data bank to test======================================================================
ndvi <- stack(list.files(path="C:/Users/Eduardo Q Marques/Documents/My Jobs/Programas/R/Science-Repository/Temporal series package/NDVI", pattern = ".tif$", full.names=TRUE,recursive=TRUE))
#Polygon to get values
polygons <-readOGR(dsn = "C:/Users/Eduardo Q Marques/Documents/My Jobs/Programas/R/Science-Repository/Temporal series package",layer="polygons")
polygon <-readOGR(dsn = "C:/Users/Eduardo Q Marques/Documents/My Jobs/Programas/R/Science-Repository/Temporal series package",layer="polygon")
points <-readOGR(dsn = "C:/Users/Eduardo Q Marques/Documents/My Jobs/Programas/R/Science-Repository/Temporal series package",layer="points")
point <-readOGR(dsn = "C:/Users/Eduardo Q Marques/Documents/My Jobs/Programas/R/Science-Repository/Temporal series package",layer="point")
lines <-readOGR(dsn = "C:/Users/Eduardo Q Marques/Documents/My Jobs/Programas/R/Science-Repository/Temporal series package",layer="lines")
line <-readOGR(dsn = "C:/Users/Eduardo Q Marques/Documents/My Jobs/Programas/R/Science-Repository/Temporal series package",layer="line")
polygons = spTransform(polygons, crs(ndvi))
polygon = spTransform(polygon, crs(ndvi))
points = spTransform(points, crs(ndvi))
point = spTransform(point, crs(ndvi))
lines = spTransform(lines, crs(ndvi))
line = spTransform(line, crs(ndvi))
#Tests ===================================================================================
#Points test
#Data frame
time_point = df_point(ndvi, point)
time_point
time_points = df_points(ndvi, points, "min")
time_points
#Plots
gg_point(ndvi, point, "line")
gg_point(ndvi, point, "point")
gg_point(ndvi, point, "boxplot")
gg_point(ndvi, point, "area")
gg_point(ndvi, point, "bar")
gg_points(ndvi, points, "mean", "line")
#Extract points temporal data  and plot(x is raster, y is point file, z is method, g is kind of plot)
gg_points = function(x,y,z,g){
ext <- raster::extract(x, y)
ext <- melt(ext)
ext <- as.data.frame(ext)
if (z == "median") {
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = median(value))
} else if (z == "mean") {
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = mean(value))
} else if(z == "max"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = max(value))
} else if(z == "min"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = min(value))
}else if(z == "sd"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = sd(value))
}else
print("Use a valid method to calculate!")
if (g == "line") {
ggplot(ext, aes(Var2, value))+
geom_line(aes(group = value), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if (g == "point") {
ggplot(ext, aes(Var2, value))+
geom_point(aes(group = 1), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "boxplot"){
ggplot(ext, aes(Var2, value))+
geom_boxplot()+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "bar"){
ggplot(ext, aes(Var2, value))+
geom_bar(stat = "identity")+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else if(g == "area"){
ggplot(ext, aes(Var2, value))+
geom_area(aes(group = 1))+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else
print("Use a valid method to plot!")
}
gg_points(ndvi, points, "mean", "line")
#Extract points temporal data  and plot(x is raster, y is point file, z is method, g is kind of plot)
gg_points = function(x,y,z,g){
ext <- raster::extract(x, y)
ext <- melt(ext)
ext <- as.data.frame(ext)
if (z == "median") {
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = median(value))
} else if (z == "mean") {
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = mean(value))
} else if(z == "max"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = max(value))
} else if(z == "min"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = min(value))
}else if(z == "sd"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = sd(value))
}else
print("Use a valid method to calculate!")
if (g == "line") {
ggplot(ext, aes(Var2, value))+
geom_line(aes(group = Var2), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if (g == "point") {
ggplot(ext, aes(Var2, value))+
geom_point(aes(group = 1), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "boxplot"){
ggplot(ext, aes(Var2, value))+
geom_boxplot()+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "bar"){
ggplot(ext, aes(Var2, value))+
geom_bar(stat = "identity")+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else if(g == "area"){
ggplot(ext, aes(Var2, value))+
geom_area(aes(group = 1))+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else
print("Use a valid method to plot!")
}
gg_points(ndvi, points, "mean", "line")
#Extract points temporal data  and plot(x is raster, y is point file, z is method, g is kind of plot)
gg_points = function(x,y,z,g){
ext <- raster::extract(x, y)
ext <- melt(ext)
ext <- as.data.frame(ext)
if (z == "median") {
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = median(value))
} else if (z == "mean") {
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = mean(value))
} else if(z == "max"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = max(value))
} else if(z == "min"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = min(value))
}else if(z == "sd"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = sd(value))
}else
print("Use a valid method to calculate!")
if (g == "line") {
ggplot(ext, aes(Var2, value))+
geom_line(stat = "identity"), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if (g == "point") {
ggplot(ext, aes(Var2, value))+
geom_point(aes(group = 1), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "boxplot"){
ggplot(ext, aes(Var2, value))+
geom_boxplot()+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "bar"){
ggplot(ext, aes(Var2, value))+
geom_bar(stat = "identity")+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else if(g == "area"){
ggplot(ext, aes(Var2, value))+
geom_area(aes(group = 1))+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else
print("Use a valid method to plot!")
}
#Extract points temporal data  and plot(x is raster, y is point file, z is method, g is kind of plot)
gg_points = function(x,y,z,g){
ext <- raster::extract(x, y)
ext <- melt(ext)
ext <- as.data.frame(ext)
if (z == "median") {
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = median(value))
} else if (z == "mean") {
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = mean(value))
} else if(z == "max"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = max(value))
} else if(z == "min"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = min(value))
}else if(z == "sd"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = sd(value))
}else
print("Use a valid method to calculate!")
if (g == "line") {
ggplot(ext, aes(Var2, value))+
geom_line(stat = "identity", size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if (g == "point") {
ggplot(ext, aes(Var2, value))+
geom_point(aes(group = 1), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "boxplot"){
ggplot(ext, aes(Var2, value))+
geom_boxplot()+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "bar"){
ggplot(ext, aes(Var2, value))+
geom_bar(stat = "identity")+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else if(g == "area"){
ggplot(ext, aes(Var2, value))+
geom_area(aes(group = 1))+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else
print("Use a valid method to plot!")
}
gg_points(ndvi, points, "mean", "line")
#Extract points temporal data  and plot(x is raster, y is point file, z is method, g is kind of plot)
gg_points = function(x,y,z,g){
ext <- raster::extract(x, y)
ext <- melt(ext)
ext <- as.data.frame(ext)
if (z == "median") {
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = median(value))
} else if (z == "mean") {
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = mean(value))
} else if(z == "max"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = max(value))
} else if(z == "min"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = min(value))
}else if(z == "sd"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = sd(value))
}else
print("Use a valid method to calculate!")
if (g == "line") {
ggplot(ext, aes(Var2, value))+
geom_line(aes(group = 1), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if (g == "point") {
ggplot(ext, aes(Var2, value))+
geom_point(aes(group = 1), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "boxplot"){
ggplot(ext, aes(Var2, value))+
geom_boxplot()+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "bar"){
ggplot(ext, aes(Var2, value))+
geom_bar(stat = "identity")+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else if(g == "area"){
ggplot(ext, aes(Var2, value))+
geom_area(aes(group = 1))+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else
print("Use a valid method to plot!")
}
gg_points(ndvi, points, "mean", "line")
ggplot(ext, aes(Var2, value, fill = value))+
geom_line(aes(group = 1), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
#Extract points temporal data  and plot(x is raster, y is point file, z is method, g is kind of plot)
gg_points = function(x,y,z,g){
ext <- raster::extract(x, y)
ext <- melt(ext)
ext <- as.data.frame(ext)
if (z == "median") {
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = median(value))
} else if (z == "mean") {
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = mean(value))
} else if(z == "max"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = max(value))
} else if(z == "min"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = min(value))
}else if(z == "sd"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = sd(value))
}else
print("Use a valid method to calculate!")
if (g == "line") {
ggplot(ext, aes(Var2, value, fill = value))+
geom_line(aes(group = 1), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if (g == "point") {
ggplot(ext, aes(Var2, value))+
geom_point(aes(group = 1), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "boxplot"){
ggplot(ext, aes(Var2, value))+
geom_boxplot()+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "bar"){
ggplot(ext, aes(Var2, value))+
geom_bar(stat = "identity")+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else if(g == "area"){
ggplot(ext, aes(Var2, value))+
geom_area(aes(group = 1))+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else
print("Use a valid method to plot!")
}
gg_points(ndvi, points, "mean", "line")
View(time_points)
gg_points(ndvi, points, "mean", "bar")
gg_points(ndvi, points, "mean", "boxplot")
#Extract points temporal data  and plot(x is raster, y is point file, z is method, g is kind of plot)
gg_points = function(x,y,z,g){
ext <- raster::extract(x, y)
ext <- melt(ext)
ext <- as.data.frame(ext)
if (z == "median") {
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = median(value))
} else if (z == "mean") {
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = mean(value))
} else if(z == "max"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = max(value))
} else if(z == "min"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = min(value))
}else if(z == "sd"){
ext_md = ext %>%
group_by(Var2) %>%
summarise(value = sd(value))
}else
print("Use a valid method to calculate!")
if (g == "line") {
ggplot(ext_md, aes(Var2, value, fill = value))+
geom_line(aes(group = 1), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if (g == "point") {
ggplot(ext_md, aes(Var2, value))+
geom_point(aes(group = 1), size = 1)+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "boxplot"){
ggplot(ext_md, aes(Var2, value))+
geom_boxplot()+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
} else if(g == "bar"){
ggplot(ext_md, aes(Var2, value))+
geom_bar(stat = "identity")+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else if(g == "area"){
ggplot(ext_md, aes(Var2, value))+
geom_area(aes(group = 1))+
labs(x="Time",y="Value")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90))
}else
print("Use a valid method to plot!")
}
gg_points(ndvi, points, "mean", "line")
gg_points(ndvi, points, "median", "line")
gg_points(ndvi, points, "max", "line")
gg_points(ndvi, points, "min", "line")
gg_points(ndvi, points, "sd", "line")
gg_points(ndvi, points, "sd", "point")
gg_points(ndvi, points, "sd", "bar")
gg_points(ndvi, points, "sd", "boxplot")
gg_points(ndvi, points, "sd", "area")
gg_points(ndvi, points, "mean", "area")
