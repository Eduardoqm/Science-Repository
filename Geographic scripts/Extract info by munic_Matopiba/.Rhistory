}
2
ed = 100
enemy = 100
while(enemy > -1) {
print("======================")
print(paste0("Ed life = ", ed))
print(paste0("Enemy life = ", enemy))
print("======================")
if(enemy <= 0){print("You win!")}
else if(ed <= 0){print("You lose!")}
# taking input with showing the message
var = readline(prompt = "O que vc opta?
1-Espada
2-Axe");
# print the value
if(var == 1){enemy = (enemy - 10)}
else if(var == 2){enemy = (enemy - 20)}
else{print("input uma opcao valida!")}
}
enemy = 100
while(enemy > -1) {
print("======================")
print(paste0("Ed life = ", ed))
print(paste0("Enemy life = ", enemy))
print("======================")
if(enemy <= 0){print("You win!")}
else if(ed <= 0){print("You lose!")}
# taking input with showing the message
var = readline(prompt = "O que vc opta?
1-Espada
2-Axe");
# print the value
if(var == 1){enemy = (enemy - 10)}
else if(var == 2){enemy = (enemy - 20)}
else{print("input uma opcao valida!")}
}
x <- rnorm(100)
x
skewness(x)
library(e1071)
x <- rnorm(100)
skewness(x)
plot(x)
library(ggplot2)
ggplot(x)+
geom_histogram()
data$x = as.data.frame(rnorm(100))
data$x = c(1:100)
data = c(1:100)
data$y = as.data.frame(rnorm(100))
View
View(data)
data = as.data.frame(c(1:100))
View(data)
data$y = as.data.frame(rnorm(100))
colnames(data) = c("x", "y")
data = as.data.frame(c(1:100))
data$y = rnorm(100)
colnames(data) = c("x", "y")
skewness(data$y)
skewness(data$x)
skewness(data$y)
ggplot(data, aes(x=x, y=y))+
geom_histogram()
ggplot(data, aes(x=x, y=y))+
geom_density()
ggplot(data, aes(x=x, y=y))+
geom_density(aes(group = x))
ggplot(data, aes(x=x, y=y))+
geom_density(aes(group = y))
ggplot(data, aes(x=x, y=y))+
geom_density(aes(y))
ggplot(data, aes(x=x, y=y))+
geom_density()
ggplot(data, aes(x=x, y=y))+
geom_density(data)
ggplot(data, aes(x=x, y=y))+
geom_density(fill = y)
ggplot(data, aes(x=x, y=y))+
geom_point()
data$grp = c("a")
ggplot(data, aes(x=x, y=y))+
geom_point(group = grp)
ggplot(data, aes(x=x, y=y))+
geom_histogram(group = grp)
ggplot(data, aes(x=x, y=y))+
geom_histogram(aes(group = grp))
ggplot(data, aes(x=x, y=y))+
geom_density(aes(group = grp))
rlang::last_error()
ggplot(data, aes(x=x, y=y))+
geom_density(aes(group = x))
data$grp = c(1)
colnames(data) = c("x", "y", "grp")
skewness(data$y)
ggplot(data, aes(x=x, y=y))+
geom_density(aes(group = grp))
data$grp = as.integer(c(1))
data = as.data.frame(c(1:100))
data$y = rnorm(100)
data$grp = as.integer(c(1))
colnames(data) = c("x", "y", "grp")
skewness(data$y)
ggplot(data, aes(x=x, y=y))+
geom_density(aes(group = grp))
ggplot(data, aes(y))+
geom_density(aes(group = grp))
ggplot(data, aes(y))+
geom_density()
ggplot(data, aes(y))+
geom_density(fill = "blue")
data = as.data.frame(c(1:100))
data$y = rnorm(100)
data$grp = as.integer(c(1))
colnames(data) = c("x", "y", "grp")
skewness(data$y)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 5.5)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 5.5)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)
ggplot(data, aes(y))+
geom_density(fill = "red", alpha = 0.5)
data$sks = skewness(data$y)
data$sks
ggplot(data, aes(y))+
geom_density(fill = "red", alpha = 0.5)+geom_label(
label="Skewness value",
x=4.1,
y=20,
label.padding = unit(0.55, "lines"),#Rectangle size around label
label.size = 0.35,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label="Skewness value",
x=4.1,
y=20,
label.padding = unit(0.55, "lines"),#Rectangle size around label
label.size = 0.35,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label="Skewness value",
x= data$sks,
y=20,
label.padding = unit(0.55, "lines"),#Rectangle size around label
label.size = 0.35,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label="Skewness value",
x= data$sks,
y=0.2,
label.padding = unit(0.55, "lines"),#Rectangle size around label
label.size = 0.35,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label="Skewness value",
x= data$sks,
y=0.2,
label.padding = unit(0.55, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label="Skewness value",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="#69b3a2"
)
skss = as.character(skewness(data$y))
skss
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label= sks,
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label= skss,
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "yellow",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "yellow",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = sks, ymin = 12, ymax = 28,
colour = "red", size = 1.5)+
geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, ymin = 12, ymax = 28,
colour = "red", size = 1.5)+
geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, y = 0.2, ymin = 12, ymax = 28,
colour = "red", size = 1.5)+
geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, y = 0.2,
colour = "red", size = 1.5)+
geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, y = 0.2, ymin = 1, ymax = 1,
colour = "red", size = 1.5)+
geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, y = 0.2, ymin = 0.2, ymax = 0.2,
colour = "red", size = 1.5)+
geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, y = 0.2, ymin = 0.2, ymax = 0.2,
colour = "red", size = 1.5)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, y = data$sks, ymin = 0.2, ymax = 0.2,
colour = "red", size = 1.5)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, y = 0, ymin = 0.2, ymax = 0.2,
colour = "red", size = 1.5)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept=data$sks, color="orange", size=1)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept=data$sks, color="red", size=1)
library(ggplot2)
library(e1071)
data = as.data.frame(c(1:100))
data$y = rnorm(100)
colnames(data) = c("x", "y")
data$sks = skewness(data$y)
data$sks
data$sks[2,]
data$sks[,2]
data$sks
data$sks[2]
data$sks[1]
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept=data$sks, color="red", size=1)
data = as.data.frame(c(1:200))
data$y = rnorm(200)
colnames(data) = c("x", "y")
data$sks = skewness(data$y)
data$sks[1]
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept=data$sks, color="red", size=1)
sks = skewness(data$y)
sks
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept=sks, color="red", size=1)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)
library(ggplot2)
library(e1071)
data = as.data.frame(c(1:200))
data$values = rnorm(200)
colnames(data) = c("x", "values")
sks = skewness(data$y)
curt = kurtosis(data$y)
sks
sks = skewness(data$values)
curt = kurtosis(data$values)
sks
curt
ggplot(data, aes(values))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)
ggplot(data, aes(values))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)+
geom_vline(xintercept = curt, color = "black", size = 1)
library(ggplot2)
library(e1071)
data = as.data.frame(c(1:700))
data$values = rnorm(700)
colnames(data) = c("x", "values")
sks = skewness(data$values)
curt = kurtosis(data$values)
sks
curt
ggplot(data, aes(values))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)+
geom_vline(xintercept = curt, color = "black", size = 1)
data = as.data.frame(c(1:50))
data$values = rnorm(50)
colnames(data) = c("x", "values")
sks = skewness(data$values)
curt = kurtosis(data$values)
sks
curt
ggplot(data, aes(values))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)+
geom_vline(xintercept = curt, color = "black", size = 1)
ggplot(data, aes(values))+
geom_histogram(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)+
geom_vline(xintercept = curt, color = "black", size = 1)
ggplot(data, aes(values))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)+
geom_vline(xintercept = curt, color = "black", size = 1)
library(ggplot2)
library(e1071)
data = as.data.frame(c(1:50))
data$values = rnorm(50)
colnames(data) = c("x", "values")
sks = skewness(data$values)
curt = kurtosis(data$values)
sks
curt
ggplot(data, aes(values))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)+
geom_vline(xintercept = curt, color = "black", size = 1)
data = as.data.frame(c(1:100))
data$values = rnorm(100)
colnames(data) = c("x", "values")
sks = skewness(data$values)
curt = kurtosis(data$values)
sks
curt
ggplot(data, aes(values))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)+
geom_vline(xintercept = curt, color = "black", size = 1)
#Data Spera by municipaly
library(raster)
library(rgdal)
#Load data ========================================
setwd("C:/Users/Eduardo Q Marques/Documents/My Jobs/Programas/R/Science-Repository/Geographic scripts/Extract info by munic_Matopiba")
img = raster("spera_latlong_2016.tif")
muni = readOGR("shape_2016.shp")
dir()
#muni = readOGR("shape_2016.shp")
muni = readOGR("PAM_2019.csv.shp")
x11()
plot(img)
plot(muni, add=T)
#Create column to id munic in shape data
muni@data$muni_id = c(1:1385)
library(tidyverse)
View(muni@data)
#Make tests with toy ========================================================================
muni2 = muni[muni@data$STATE == "TO"]
muni2 = muni %>%
filter(muni@data$STATE == "TO")
muni2 = muni %>%
filter(@data$STATE == "TO")
muni2 = muni %>%
filter(data$STATE == "TO")
muni2 = muni %>%
filter(STATE == "TO")
muni2 = muni@data$STATE %>%
filter(STATE == "TO")
#Make tests with toy ========================================================================
muni@data$STATE = as.factor(muni@data$STATE)
muni2 = muni[muni@data$STATE == "TO"]
muni2 = muni@data$STATE %>%
filter(STATE == "TO")
muni2 = muni@data %>%
filter(STATE == "TO")
View(muni2)
muni2 = muni
muni2@data = muni@data %>%
filter(STATE == "TO")
View(muni2)
plot(muni2)
plot(muni[,1:139])
plot(muni[1:139])
plot(muni[1:139,])
muni3 = muni[muni = "TO"]
muni3 = muni[muni == "TO"]
muni3 = muni[muni == TO]
#Make tests with toy ========================================================================
muni2 = muni[1:139,]
X11()
plot(muni2)
view(muni2@data)
#Make tests with toy ========================================================================
muni2 = muni[1:50,]
view(muni2@data)
plot(muni2)
#Make tests with toy ========================================================================
muni2 = muni[1:139,]
plot(muni2)
view(muni2@data)
