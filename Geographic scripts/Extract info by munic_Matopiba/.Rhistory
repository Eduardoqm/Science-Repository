ggplot(data, aes(y))+
geom_density(aes(group = grp))
ggplot(data, aes(y))+
geom_density()
ggplot(data, aes(y))+
geom_density(fill = "blue")
data = as.data.frame(c(1:100))
data$y = rnorm(100)
data$grp = as.integer(c(1))
colnames(data) = c("x", "y", "grp")
skewness(data$y)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 5.5)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 5.5)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)
ggplot(data, aes(y))+
geom_density(fill = "red", alpha = 0.5)
data$sks = skewness(data$y)
data$sks
ggplot(data, aes(y))+
geom_density(fill = "red", alpha = 0.5)+geom_label(
label="Skewness value",
x=4.1,
y=20,
label.padding = unit(0.55, "lines"),#Rectangle size around label
label.size = 0.35,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label="Skewness value",
x=4.1,
y=20,
label.padding = unit(0.55, "lines"),#Rectangle size around label
label.size = 0.35,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label="Skewness value",
x= data$sks,
y=20,
label.padding = unit(0.55, "lines"),#Rectangle size around label
label.size = 0.35,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label="Skewness value",
x= data$sks,
y=0.2,
label.padding = unit(0.55, "lines"),#Rectangle size around label
label.size = 0.35,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label="Skewness value",
x= data$sks,
y=0.2,
label.padding = unit(0.55, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label="Skewness value",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="#69b3a2"
)
skss = as.character(skewness(data$y))
skss
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label= sks,
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label= skss,
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "yellow",
fill="#69b3a2"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "yellow",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = sks, ymin = 12, ymax = 28,
colour = "red", size = 1.5)+
geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, ymin = 12, ymax = 28,
colour = "red", size = 1.5)+
geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, y = 0.2, ymin = 12, ymax = 28,
colour = "red", size = 1.5)+
geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, y = 0.2,
colour = "red", size = 1.5)+
geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, y = 0.2, ymin = 1, ymax = 1,
colour = "red", size = 1.5)+
geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, y = 0.2, ymin = 0.2, ymax = 0.2,
colour = "red", size = 1.5)+
geom_label(
label= "*",
x= data$sks,
y=0.2,
label.padding = unit(0.1, "lines"),#Rectangle size around label
label.size = 0.1,
color = "black",
fill="yellow"
)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, y = 0.2, ymin = 0.2, ymax = 0.2,
colour = "red", size = 1.5)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, y = data$sks, ymin = 0.2, ymax = 0.2,
colour = "red", size = 1.5)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
annotate("pointrange", x = data$sks, y = 0, ymin = 0.2, ymax = 0.2,
colour = "red", size = 1.5)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept=data$sks, color="orange", size=1)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept=data$sks, color="red", size=1)
library(ggplot2)
library(e1071)
data = as.data.frame(c(1:100))
data$y = rnorm(100)
colnames(data) = c("x", "y")
data$sks = skewness(data$y)
data$sks
data$sks[2,]
data$sks[,2]
data$sks
data$sks[2]
data$sks[1]
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept=data$sks, color="red", size=1)
data = as.data.frame(c(1:200))
data$y = rnorm(200)
colnames(data) = c("x", "y")
data$sks = skewness(data$y)
data$sks[1]
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept=data$sks, color="red", size=1)
sks = skewness(data$y)
sks
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept=sks, color="red", size=1)
ggplot(data, aes(y))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)
library(ggplot2)
library(e1071)
data = as.data.frame(c(1:200))
data$values = rnorm(200)
colnames(data) = c("x", "values")
sks = skewness(data$y)
curt = kurtosis(data$y)
sks
sks = skewness(data$values)
curt = kurtosis(data$values)
sks
curt
ggplot(data, aes(values))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)
ggplot(data, aes(values))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)+
geom_vline(xintercept = curt, color = "black", size = 1)
library(ggplot2)
library(e1071)
data = as.data.frame(c(1:700))
data$values = rnorm(700)
colnames(data) = c("x", "values")
sks = skewness(data$values)
curt = kurtosis(data$values)
sks
curt
ggplot(data, aes(values))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)+
geom_vline(xintercept = curt, color = "black", size = 1)
data = as.data.frame(c(1:50))
data$values = rnorm(50)
colnames(data) = c("x", "values")
sks = skewness(data$values)
curt = kurtosis(data$values)
sks
curt
ggplot(data, aes(values))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)+
geom_vline(xintercept = curt, color = "black", size = 1)
ggplot(data, aes(values))+
geom_histogram(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)+
geom_vline(xintercept = curt, color = "black", size = 1)
ggplot(data, aes(values))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)+
geom_vline(xintercept = curt, color = "black", size = 1)
library(ggplot2)
library(e1071)
data = as.data.frame(c(1:50))
data$values = rnorm(50)
colnames(data) = c("x", "values")
sks = skewness(data$values)
curt = kurtosis(data$values)
sks
curt
ggplot(data, aes(values))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)+
geom_vline(xintercept = curt, color = "black", size = 1)
data = as.data.frame(c(1:100))
data$values = rnorm(100)
colnames(data) = c("x", "values")
sks = skewness(data$values)
curt = kurtosis(data$values)
sks
curt
ggplot(data, aes(values))+
geom_density(fill = "blue", alpha = 0.5)+
geom_vline(xintercept = sks, color = "red", size = 1)+
geom_vline(xintercept = curt, color = "black", size = 1)
#Data Spera by municipaly
library(raster)
library(rgdal)
#Load data ========================================
setwd("C:/Users/Eduardo Q Marques/Documents/My Jobs/Programas/R/Science-Repository/Geographic scripts/Extract info by munic_Matopiba")
img = raster("spera_latlong_2016.tif")
muni = readOGR("shape_2016.shp")
dir()
#muni = readOGR("shape_2016.shp")
muni = readOGR("PAM_2019.csv.shp")
x11()
plot(img)
plot(muni, add=T)
#Create column to id munic in shape data
muni@data$muni_id = c(1:1385)
library(tidyverse)
View(muni@data)
#Make tests with toy ========================================================================
muni2 = muni[muni@data$STATE == "TO"]
muni2 = muni %>%
filter(muni@data$STATE == "TO")
muni2 = muni %>%
filter(@data$STATE == "TO")
muni2 = muni %>%
filter(data$STATE == "TO")
muni2 = muni %>%
filter(STATE == "TO")
muni2 = muni@data$STATE %>%
filter(STATE == "TO")
#Make tests with toy ========================================================================
muni@data$STATE = as.factor(muni@data$STATE)
muni2 = muni[muni@data$STATE == "TO"]
muni2 = muni@data$STATE %>%
filter(STATE == "TO")
muni2 = muni@data %>%
filter(STATE == "TO")
View(muni2)
muni2 = muni
muni2@data = muni@data %>%
filter(STATE == "TO")
View(muni2)
plot(muni2)
plot(muni[,1:139])
plot(muni[1:139])
plot(muni[1:139,])
muni3 = muni[muni = "TO"]
muni3 = muni[muni == "TO"]
muni3 = muni[muni == TO]
#Make tests with toy ========================================================================
muni2 = muni[1:139,]
X11()
plot(muni2)
view(muni2@data)
#Make tests with toy ========================================================================
muni2 = muni[1:50,]
view(muni2@data)
plot(muni2)
#Make tests with toy ========================================================================
muni2 = muni[1:139,]
plot(muni2)
view(muni2@data)
#Data Spera by municipaly
library(raster)
library(rgdal)
library(tidyverse)
#Load data ========================================
setwd("C:/Users/Eduardo Q Marques/Documents/My Jobs/Programas/R/Science-Repository/Geographic scripts/Extract info by munic_Matopiba")
img = raster("spera_latlong_2016.tif")
#muni = readOGR("shape_2016.shp")
muni = readOGR("PAM_2019.csv.shp")
#Make tests with toy ========================================================================
muni2 = muni[1:139,]
x11()
plot(img)
plot(muni2, add=T)
View(muni2@data)
muni2@data$muni_id = c(1:length(muni2$MUNI))
View(muni2@data)
#Separete Spera data in binary raster do wich class
#Forest, pasture, cerrado
cls = img
#Separete Spera data in binary raster do wich class
#Forest, pasture, cerrado
cls0 = img
cls0[cls0 <= 0] = 1
#Separete Spera data in binary raster do wich class
#Forest, pasture, cerrado
cls0 = img
cls0[cls0 >= 0] = 2
plot(cls0)
cls0[cls0 <= 0] = 1
plot(cls0)
cls[cls == 2] = 0
plot(cls0)
cls0
#Separete Spera data in binary raster do wich class
#Forest, pasture, cerrado
cls0 = img
cls0[cls0 > 0] = 2
cls0[cls0 == 0] = 1
cls[cls == 2] = 0
x11()
plot
plot(cls0)
cls0[cls0 == 2] = 0
plot(cls0)
cls1 = img #Soy single cropped
cls1[cls != 1] = 0
plot(cls1)
x11()
plot(cls1)
cls1 = (img[img != 1] = 0)
plot(cls1)
cls1 = img #Soy single cropped
plot(cls1)
img = raster("spera_latlong_2016.tif")
cls1 = img #Soy single cropped
plot(cls1)
cls1[cls1 != 1] = 0
plot(cls1)
cls2 = img
plot(cls2)
cls2 = img #Corn single cropped
cls2[cls2 != 2] = 0
plot(cls2)
cls2[cls2 == 2] = 1
plot(cls2)
cls4 = img #Cotton single cropped
cls4[cls4 != 4] = 0; cls4[cls4 == 4] = 1
plot(cls4)
cls5 = img #Soy/Cotton double crop rotation
cls5[cls5 != 5] = 0; cls5[cls5 == 5] = 1
plot(cls5)
cls6 = img #Soy/Corn double crop roation
plot(cls6)
cls6[cls != 6] =0
plot(cls6)
cls6[cls == 6] = 1
plot(cls6)
#Extracting data
muni_c1 = extract(cls1, muni2, na.rm = T, df = T)
cls1
#Extracting data
muni_c1 = raster::extract(cls1, muni2, na.rm = T, df = T)
View(muni_c1)
#Extracting data
muni_c1 = raster::extract(cls1, muni2, na.rm = T, df = T, fun = sum)
View(muni_c1)
c1 = muni_c1
View(c1)
colnames(c1) = c("muni_id", "class1")
c2 = raster::extract(cls2, muni2, na.rm = T, df = T, fun = sum)
View(c2)
muni2@data = cbind(muni2@data, c1, c2)
colnames(c2) = c("muni_id", "class2")
#Make tests with toy ========================================================================
#Reduce polygons to Tocantins
muni2 = muni[1:139,]
muni2@data = cbind(muni2@data, c1, c2)
view(muni2@data)
#Reduce polygons to Tocantins
muni2 = muni[1:139,]
#Create column to id munic in shape data
muni2@data$muni_id = c(1:length(muni2$MUNI))
view(muni2@data)
muni2@data = cbind(muni2@data, c1, c2)
view(muni2@data)
